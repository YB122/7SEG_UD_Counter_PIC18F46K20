

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Oct 08 20:29:48 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 21/07/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F46K20 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   0013D2                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _port_register
    62   0013D2  80                 	db	128
    63   0013D3  0F                 	db	15
    64   0013D4  81                 	db	129
    65   0013D5  0F                 	db	15
    66   0013D6  82                 	db	130
    67   0013D7  0F                 	db	15
    68   0013D8  83                 	db	131
    69   0013D9  0F                 	db	15
    70   0013DA  83                 	db	131
    71   0013DB  0F                 	db	15
    72                           
    73                           ;initializer for _lat_register
    74   0013DC  89                 	db	137
    75   0013DD  0F                 	db	15
    76   0013DE  8A                 	db	138
    77   0013DF  0F                 	db	15
    78   0013E0  8B                 	db	139
    79   0013E1  0F                 	db	15
    80   0013E2  8C                 	db	140
    81   0013E3  0F                 	db	15
    82   0013E4  8D                 	db	141
    83   0013E5  0F                 	db	15
    84                           
    85                           ;initializer for _tris_register
    86   0013E6  92                 	db	146
    87   0013E7  0F                 	db	15
    88   0013E8  93                 	db	147
    89   0013E9  0F                 	db	15
    90   0013EA  94                 	db	148
    91   0013EB  0F                 	db	15
    92   0013EC  95                 	db	149
    93   0013ED  0F                 	db	15
    94   0013EE  96                 	db	150
    95   0013EF  0F                 	db	15
    96                           
    97                           ;initializer for _ret
    98   0013F0  01                 	db	1
    99                           
   100                           ;initializer for _dc_motor_2
   101   0013F1  12                 	db	18
   102   0013F2  1A                 	db	26
   103                           
   104                           ;initializer for _dc_motor_1
   105   0013F3  02                 	db	2
   106   0013F4  0A                 	db	10
   107   000000                     _PORTA	set	3968
   108   000000                     _LATA	set	3977
   109   000000                     _TRISA	set	3986
   110   000000                     _TRISE	set	3990
   111   000000                     _TRISD	set	3989
   112   000000                     _TRISC	set	3988
   113   000000                     _TRISB	set	3987
   114   000000                     _LATE	set	3981
   115   000000                     _LATD	set	3980
   116   000000                     _LATC	set	3979
   117   000000                     _LATB	set	3978
   118   000000                     _PORTD	set	3971
   119   000000                     _PORTC	set	3970
   120   000000                     _PORTB	set	3969
   121                           
   122                           ; #config settings
   123                           
   124                           	psect	cinit
   125   001368                     __pcinit:
   126                           	callstack 0
   127   001368                     start_initialization:
   128                           	callstack 0
   129   001368                     __initialization:
   130                           	callstack 0
   131                           
   132                           ; Initialize objects allocated to COMRAM (35 bytes)
   133                           ; load TBLPTR registers with __pidataCOMRAM
   134   001368  0ED2               	movlw	low __pidataCOMRAM
   135   00136A  6EF6               	movwf	tblptrl,c
   136   00136C  0E13               	movlw	high __pidataCOMRAM
   137   00136E  6EF7               	movwf	tblptrh,c
   138   001370  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   139   001372  6EF8               	movwf	tblptru,c
   140   001374  EE00  F001         	lfsr	0,__pdataCOMRAM
   141   001378  EE10 F023          	lfsr	1,35
   142   00137C                     copy_data0:
   143   00137C  0009               	tblrd		*+
   144   00137E  CFF5 FFEE          	movff	tablat,postinc0
   145   001382  50E5               	movf	postdec1,w,c
   146   001384  50E1               	movf	fsr1l,w,c
   147   001386  E1FA               	bnz	copy_data0
   148                           
   149                           ; Clear objects allocated to COMRAM (8 bytes)
   150   001388  EE00  F030         	lfsr	0,__pbssCOMRAM
   151   00138C  0E08               	movlw	8
   152   00138E                     clear_0:
   153   00138E  6AEE               	clrf	postinc0,c
   154   001390  06E8               	decf	wreg,f,c
   155   001392  E1FD               	bnz	clear_0
   156   001394                     end_of_initialization:
   157                           	callstack 0
   158   001394                     __end_of__initialization:
   159                           	callstack 0
   160   001394  0E00               	movlw	low (__Lmediumconst shr (0+16))
   161   001396  6EF8               	movwf	tblptru,c
   162   001398  0100               	movlb	0
   163   00139A  EF1C  F009         	goto	_main	;jump to C main() function
   164                           
   165                           	psect	bssCOMRAM
   166   000030                     __pbssCOMRAM:
   167                           	callstack 0
   168   000030                     relay_turn_toggle@F3155:
   169                           	callstack 0
   170   000030                     	ds	1
   171   000031                     relay_turn_off@F3150:
   172                           	callstack 0
   173   000031                     	ds	1
   174   000032                     relay_turn_on@F3145:
   175                           	callstack 0
   176   000032                     	ds	1
   177   000033                     relay_intialize@F3140:
   178                           	callstack 0
   179   000033                     	ds	1
   180   000034                     led_turn_toggle@F3155:
   181                           	callstack 0
   182   000034                     	ds	1
   183   000035                     led_turn_off@F3150:
   184                           	callstack 0
   185   000035                     	ds	1
   186   000036                     led_turn_on@F3145:
   187                           	callstack 0
   188   000036                     	ds	1
   189   000037                     led_initialize@F3140:
   190                           	callstack 0
   191   000037                     	ds	1
   192                           
   193                           	psect	dataCOMRAM
   194   000001                     __pdataCOMRAM:
   195                           	callstack 0
   196   000001                     _port_register:
   197                           	callstack 0
   198   000001                     	ds	10
   199   00000B                     _lat_register:
   200                           	callstack 0
   201   00000B                     	ds	10
   202   000015                     _tris_register:
   203                           	callstack 0
   204   000015                     	ds	10
   205   00001F                     _ret:
   206                           	callstack 0
   207   00001F                     	ds	1
   208   000020                     _dc_motor_2:
   209                           	callstack 0
   210   000020                     	ds	2
   211   000022                     _dc_motor_1:
   212                           	callstack 0
   213   000022                     	ds	2
   214                           
   215                           	psect	cstackCOMRAM
   216   000024                     __pcstackCOMRAM:
   217                           	callstack 0
   218   000024                     gpio_pin_direction_intialize@_pin_config:
   219                           	callstack 0
   220   000024                     gpio_pin_write_logic@_pin_config:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x0
   224   000024                     	ds	1
   225   000025                     ??_gpio_pin_direction_intialize:
   226   000025                     gpio_pin_write_logic@logic:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x1
   230   000025                     	ds	1
   231   000026                     ??_gpio_pin_write_logic:
   232                           
   233                           ; 1 bytes @ 0x2
   234   000026                     	ds	4
   235   00002A                     gpio_pin_direction_intialize@ret:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x6
   239   00002A                     	ds	1
   240   00002B                     dc_motor_intialize@_dc_motor:
   241                           	callstack 0
   242   00002B                     gpio_pin_write_logic@ret:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x7
   246   00002B                     	ds	1
   247   00002C                     dc_motor_intialize@ret:
   248                           	callstack 0
   249   00002C                     dc_motor_move_right@_dc_motor:
   250                           	callstack 0
   251   00002C                     dc_motor_move_left@_dc_motor:
   252                           	callstack 0
   253   00002C                     dc_motor_stop@_dc_motor:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x8
   257   00002C                     	ds	1
   258   00002D                     dc_motor_move_right@ret:
   259                           	callstack 0
   260   00002D                     dc_motor_move_left@ret:
   261                           	callstack 0
   262   00002D                     dc_motor_stop@ret:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x9
   266   00002D                     	ds	1
   267   00002E                     ??_main:
   268                           
   269                           ; 1 bytes @ 0xA
   270   00002E                     	ds	2
   271                           
   272 ;;
   273 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   274 ;;
   275 ;; *************** function _main *****************
   276 ;; Defined at:
   277 ;;		line 258 in file "application.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  2  258[None  ] int 
   284 ;; Registers used:
   285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   295 ;;Total ram usage:        2 bytes
   296 ;; Hardware stack levels required when called: 2
   297 ;; This function calls:
   298 ;;		_dc_motor_intialize
   299 ;;		_dc_motor_move_left
   300 ;;		_dc_motor_move_right
   301 ;;		_dc_motor_stop
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text0
   308   001238                     __ptext0:
   309                           	callstack 0
   310   001238                     _main:
   311                           	callstack 29
   312   001238                     
   313                           ;application.c: 260:     ret = dc_motor_intialize(&dc_motor_1);
   314   001238  0E22               	movlw	low _dc_motor_1
   315   00123A  6E2B               	movwf	dc_motor_intialize@_dc_motor^0,c
   316   00123C  ECCF  F009         	call	_dc_motor_intialize	;wreg free
   317   001240  6E1F               	movwf	_ret^0,c
   318                           
   319                           ;application.c: 261:     ret = dc_motor_intialize(&dc_motor_2);
   320   001242  0E20               	movlw	low _dc_motor_2
   321   001244  6E2B               	movwf	dc_motor_intialize@_dc_motor^0,c
   322   001246  ECCF  F009         	call	_dc_motor_intialize	;wreg free
   323   00124A  6E1F               	movwf	_ret^0,c
   324   00124C                     l259:
   325                           
   326                           ;application.c: 264:     {;application.c: 265:         ret = dc_motor_move_right(&dc_mot
      +                          or_1);
   327   00124C  0E22               	movlw	low _dc_motor_1
   328   00124E  6E2C               	movwf	dc_motor_move_right@_dc_motor^0,c
   329   001250  EC78  F009         	call	_dc_motor_move_right	;wreg free
   330   001254  6E1F               	movwf	_ret^0,c
   331   001256                     
   332                           ;application.c: 266:         _delay((unsigned long)((5000)*(8000000/4000.0)));
   333   001256  0E33               	movlw	51
   334   001258  6E2F               	movwf	(??_main+1)^0,c
   335   00125A  0EBB               	movlw	187
   336   00125C  6E2E               	movwf	??_main^0,c
   337   00125E  0EE0               	movlw	224
   338   001260                     u907:
   339   001260  2EE8               	decfsz	wreg,f,c
   340   001262  D7FE               	bra	u907
   341   001264  2E2E               	decfsz	??_main^0,f,c
   342   001266  D7FC               	bra	u907
   343   001268  2E2F               	decfsz	(??_main+1)^0,f,c
   344   00126A  D7FA               	bra	u907
   345   00126C                     
   346                           ;application.c: 267:         ret = dc_motor_move_left(&dc_motor_1);
   347   00126C  0E22               	movlw	low _dc_motor_1
   348   00126E  6E2C               	movwf	dc_motor_move_left@_dc_motor^0,c
   349   001270  EC96  F009         	call	_dc_motor_move_left	;wreg free
   350   001274  6E1F               	movwf	_ret^0,c
   351                           
   352                           ;application.c: 268:         _delay((unsigned long)((5000)*(8000000/4000.0)));
   353   001276  0E33               	movlw	51
   354   001278  6E2F               	movwf	(??_main+1)^0,c
   355   00127A  0EBB               	movlw	187
   356   00127C  6E2E               	movwf	??_main^0,c
   357   00127E  0EE0               	movlw	224
   358   001280                     u917:
   359   001280  2EE8               	decfsz	wreg,f,c
   360   001282  D7FE               	bra	u917
   361   001284  2E2E               	decfsz	??_main^0,f,c
   362   001286  D7FC               	bra	u917
   363   001288  2E2F               	decfsz	(??_main+1)^0,f,c
   364   00128A  D7FA               	bra	u917
   365   00128C                     
   366                           ;application.c: 269:         ret = dc_motor_stop(&dc_motor_1);
   367   00128C  0E22               	movlw	low _dc_motor_1
   368   00128E  6E2C               	movwf	dc_motor_stop@_dc_motor^0,c
   369   001290  EC5A  F009         	call	_dc_motor_stop	;wreg free
   370   001294  6E1F               	movwf	_ret^0,c
   371   001296                     
   372                           ;application.c: 270:         _delay((unsigned long)((5000)*(8000000/4000.0)));
   373   001296  0E33               	movlw	51
   374   001298  6E2F               	movwf	(??_main+1)^0,c
   375   00129A  0EBB               	movlw	187
   376   00129C  6E2E               	movwf	??_main^0,c
   377   00129E  0EE0               	movlw	224
   378   0012A0                     u927:
   379   0012A0  2EE8               	decfsz	wreg,f,c
   380   0012A2  D7FE               	bra	u927
   381   0012A4  2E2E               	decfsz	??_main^0,f,c
   382   0012A6  D7FC               	bra	u927
   383   0012A8  2E2F               	decfsz	(??_main+1)^0,f,c
   384   0012AA  D7FA               	bra	u927
   385   0012AC  EF26  F009         	goto	l259
   386   0012B0  EF00  F000         	goto	start
   387   0012B4                     __end_of_main:
   388                           	callstack 0
   389                           
   390 ;; *************** function _dc_motor_stop *****************
   391 ;; Defined at:
   392 ;;		line 69 in file "ECU_Layer/DC_MOTOR/ecu_dc_motor.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   395 ;;		 -> dc_motor_1(2), 
   396 ;; Auto vars:     Size  Location     Type
   397 ;;  ret             1    9[COMRAM] unsigned char 
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      unsigned char 
   400 ;; Registers used:
   401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   407 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;Total ram usage:        2 bytes
   412 ;; Hardware stack levels used: 1
   413 ;; Hardware stack levels required when called: 1
   414 ;; This function calls:
   415 ;;		_gpio_pin_write_logic
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text1
   422   0012B4                     __ptext1:
   423                           	callstack 0
   424   0012B4                     _dc_motor_stop:
   425                           	callstack 29
   426   0012B4                     
   427                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 72:     if(((void*)0) == _dc_motor)
   428   0012B4  502C               	movf	dc_motor_stop@_dc_motor^0,w,c
   429   0012B6  A4D8               	btfss	status,2,c
   430   0012B8  EF60  F009         	goto	u731
   431   0012BC  EF62  F009         	goto	u730
   432   0012C0                     u731:
   433   0012C0  EF66  F009         	goto	l1438
   434   0012C4                     u730:
   435   0012C4                     
   436                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 73:         ret = (std_ReturneType)0x00 ;
   437   0012C4  0E00               	movlw	0
   438   0012C6  6E2D               	movwf	dc_motor_stop@ret^0,c
   439   0012C8  EF76  F009         	goto	l1442
   440   0012CC                     l1438:
   441                           
   442                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 75:     {;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 76:    
      +                               ret = gpio_pin_write_logic(&(_dc_motor->dc_motor[0]) , LOW);
   443   0012CC  C02C  F024         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
   444   0012D0  0E00               	movlw	0
   445   0012D2  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   446   0012D4  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   447   0012D8  6E2D               	movwf	dc_motor_stop@ret^0,c
   448                           
   449                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 77:         ret = gpio_pin_write_logic(&(_dc_motor->
      +                          dc_motor[1]) , LOW);
   450   0012DA  282C               	incf	dc_motor_stop@_dc_motor^0,w,c
   451   0012DC  6E24               	movwf	gpio_pin_write_logic@_pin_config^0,c
   452   0012DE  0E00               	movlw	0
   453   0012E0  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   454   0012E2  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   455   0012E6  6E2D               	movwf	dc_motor_stop@ret^0,c
   456   0012E8                     
   457                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 78:        ret = (std_ReturneType)0x01 ;
   458   0012E8  0E01               	movlw	1
   459   0012EA  6E2D               	movwf	dc_motor_stop@ret^0,c
   460   0012EC                     l1442:
   461                           
   462                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 80:     return ret ;
   463   0012EC  502D               	movf	dc_motor_stop@ret^0,w,c
   464   0012EE  0012               	return		;funcret
   465   0012F0                     __end_of_dc_motor_stop:
   466                           	callstack 0
   467                           
   468 ;; *************** function _dc_motor_move_right *****************
   469 ;; Defined at:
   470 ;;		line 21 in file "ECU_Layer/DC_MOTOR/ecu_dc_motor.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   473 ;;		 -> dc_motor_1(2), 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  ret             1    9[COMRAM] unsigned char 
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      unsigned char 
   478 ;; Registers used:
   479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   485 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;Total ram usage:        2 bytes
   490 ;; Hardware stack levels used: 1
   491 ;; Hardware stack levels required when called: 1
   492 ;; This function calls:
   493 ;;		_gpio_pin_write_logic
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text2
   500   0012F0                     __ptext2:
   501                           	callstack 0
   502   0012F0                     _dc_motor_move_right:
   503                           	callstack 29
   504   0012F0                     
   505                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 24:     if(((void*)0) == _dc_motor)
   506   0012F0  502C               	movf	dc_motor_move_right@_dc_motor^0,w,c
   507   0012F2  A4D8               	btfss	status,2,c
   508   0012F4  EF7E  F009         	goto	u711
   509   0012F8  EF80  F009         	goto	u710
   510   0012FC                     u711:
   511   0012FC  EF84  F009         	goto	l1414
   512   001300                     u710:
   513   001300                     
   514                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 25:         ret = (std_ReturneType)0x00 ;
   515   001300  0E00               	movlw	0
   516   001302  6E2D               	movwf	dc_motor_move_right@ret^0,c
   517   001304  EF94  F009         	goto	l1418
   518   001308                     l1414:
   519                           
   520                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 27:     {;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 28:    
      +                               ret = gpio_pin_write_logic(&(_dc_motor->dc_motor[0]) , HIGH);
   521   001308  C02C  F024         	movff	dc_motor_move_right@_dc_motor,gpio_pin_write_logic@_pin_config
   522   00130C  0E01               	movlw	1
   523   00130E  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   524   001310  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   525   001314  6E2D               	movwf	dc_motor_move_right@ret^0,c
   526                           
   527                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 29:         ret = gpio_pin_write_logic(&(_dc_motor->
      +                          dc_motor[1]) , LOW);
   528   001316  282C               	incf	dc_motor_move_right@_dc_motor^0,w,c
   529   001318  6E24               	movwf	gpio_pin_write_logic@_pin_config^0,c
   530   00131A  0E00               	movlw	0
   531   00131C  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   532   00131E  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   533   001322  6E2D               	movwf	dc_motor_move_right@ret^0,c
   534   001324                     
   535                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 30:         ret = (std_ReturneType)0x01 ;
   536   001324  0E01               	movlw	1
   537   001326  6E2D               	movwf	dc_motor_move_right@ret^0,c
   538   001328                     l1418:
   539                           
   540                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 32:     return ret ;
   541   001328  502D               	movf	dc_motor_move_right@ret^0,w,c
   542   00132A  0012               	return		;funcret
   543   00132C                     __end_of_dc_motor_move_right:
   544                           	callstack 0
   545                           
   546 ;; *************** function _dc_motor_move_left *****************
   547 ;; Defined at:
   548 ;;		line 37 in file "ECU_Layer/DC_MOTOR/ecu_dc_motor.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   551 ;;		 -> dc_motor_1(2), 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  ret             1    9[COMRAM] unsigned char 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      unsigned char 
   556 ;; Registers used:
   557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   563 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;Total ram usage:        2 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; Hardware stack levels required when called: 1
   570 ;; This function calls:
   571 ;;		_gpio_pin_write_logic
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text3
   578   00132C                     __ptext3:
   579                           	callstack 0
   580   00132C                     _dc_motor_move_left:
   581                           	callstack 29
   582   00132C                     
   583                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 40:     if(((void*)0) == _dc_motor)
   584   00132C  502C               	movf	dc_motor_move_left@_dc_motor^0,w,c
   585   00132E  A4D8               	btfss	status,2,c
   586   001330  EF9C  F009         	goto	u721
   587   001334  EF9E  F009         	goto	u720
   588   001338                     u721:
   589   001338  EFA2  F009         	goto	l1426
   590   00133C                     u720:
   591   00133C                     
   592                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 41:         ret = (std_ReturneType)0x00 ;
   593   00133C  0E00               	movlw	0
   594   00133E  6E2D               	movwf	dc_motor_move_left@ret^0,c
   595   001340  EFB2  F009         	goto	l1430
   596   001344                     l1426:
   597                           
   598                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 43:     {;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 44:    
      +                              ret = gpio_pin_write_logic(&(_dc_motor->dc_motor[0]) , LOW);
   599   001344  C02C  F024         	movff	dc_motor_move_left@_dc_motor,gpio_pin_write_logic@_pin_config
   600   001348  0E00               	movlw	0
   601   00134A  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   602   00134C  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   603   001350  6E2D               	movwf	dc_motor_move_left@ret^0,c
   604                           
   605                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 45:        ret = gpio_pin_write_logic(&(_dc_motor->d
      +                          c_motor[1]) , HIGH);
   606   001352  282C               	incf	dc_motor_move_left@_dc_motor^0,w,c
   607   001354  6E24               	movwf	gpio_pin_write_logic@_pin_config^0,c
   608   001356  0E01               	movlw	1
   609   001358  6E25               	movwf	gpio_pin_write_logic@logic^0,c
   610   00135A  EC94  F008         	call	_gpio_pin_write_logic	;wreg free
   611   00135E  6E2D               	movwf	dc_motor_move_left@ret^0,c
   612   001360                     
   613                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 46:        ret = (std_ReturneType)0x01 ;
   614   001360  0E01               	movlw	1
   615   001362  6E2D               	movwf	dc_motor_move_left@ret^0,c
   616   001364                     l1430:
   617                           
   618                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 48:     return ret ;
   619   001364  502D               	movf	dc_motor_move_left@ret^0,w,c
   620   001366  0012               	return		;funcret
   621   001368                     __end_of_dc_motor_move_left:
   622                           	callstack 0
   623                           
   624 ;; *************** function _gpio_pin_write_logic *****************
   625 ;; Defined at:
   626 ;;		line 61 in file "MCAL_Layer/GPIO/hal_gpio.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   629 ;;		 -> dc_motor_1$dc_motor(2), dc_motor_1(2), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
   630 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), 
   631 ;;  logic           1    1[COMRAM] unsigned char 
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  ret             1    7[COMRAM] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      unsigned char 
   636 ;; Registers used:
   637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;Total ram usage:        8 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_dc_motor_move_right
   653 ;;		_dc_motor_move_left
   654 ;;		_dc_motor_stop
   655 ;;		_led_turn_on
   656 ;;		_led_turn_off
   657 ;;		_relay_turn_on
   658 ;;		_relay_turn_off
   659 ;;		_gpio_pin_intialize
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text4
   664   001128                     __ptext4:
   665                           	callstack 0
   666   001128                     _gpio_pin_write_logic:
   667                           	callstack 29
   668   001128                     
   669                           ;MCAL_Layer/GPIO/hal_gpio.c: 61: std_ReturneType gpio_pin_write_logic(const pin_config_t
      +                           *_pin_config , uint8 logic);MCAL_Layer/GPIO/hal_gpio.c: 62: {;MCAL_Layer/GPIO/hal_gpio.
      +                          c: 63:     std_ReturneType ret = (std_ReturneType)0x01 ;
   670   001128  0E01               	movlw	1
   671   00112A  6E2B               	movwf	gpio_pin_write_logic@ret^0,c
   672                           
   673                           ;MCAL_Layer/GPIO/hal_gpio.c: 64:     if((_pin_config == ((void*)0)) || (_pin_config->pin
      +                           > 8 -1))
   674   00112C  5024               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   675   00112E  B4D8               	btfsc	status,2,c
   676   001130  EF9C  F008         	goto	u661
   677   001134  EF9E  F008         	goto	u660
   678   001138                     u661:
   679   001138  EFAE  F008         	goto	l1380
   680   00113C                     u660:
   681   00113C  5024               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   682   00113E  6ED9               	movwf	fsr2l,c
   683   001140  6ADA               	clrf	fsr2h,c
   684   001142  30DF               	rrcf	223,w,c
   685   001144  32E8               	rrcf	wreg,f,c
   686   001146  32E8               	rrcf	wreg,f,c
   687   001148  0B07               	andlw	7
   688   00114A  6E26               	movwf	??_gpio_pin_write_logic^0,c
   689   00114C  0E07               	movlw	7
   690   00114E  6426               	cpfsgt	??_gpio_pin_write_logic^0,c
   691   001150  EFAC  F008         	goto	u671
   692   001154  EFAE  F008         	goto	u670
   693   001158                     u671:
   694   001158  EF05  F009         	goto	l1388
   695   00115C                     u670:
   696   00115C                     l1380:
   697                           
   698                           ;MCAL_Layer/GPIO/hal_gpio.c: 65:         ret = (std_ReturneType)0x00 ;
   699   00115C  0E00               	movlw	0
   700   00115E  6E2B               	movwf	gpio_pin_write_logic@ret^0,c
   701   001160  EF1A  F009         	goto	l1390
   702   001164                     l1382:
   703                           
   704                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:                 ((*((volatile uint8 *)(lat_register[_pi
      +                          n_config->port]))) &= ~((uint8)1 << _pin_config->pin));
   705   001164  5024               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   706   001166  6ED9               	movwf	fsr2l,c
   707   001168  6ADA               	clrf	fsr2h,c
   708   00116A  30DF               	rrcf	223,w,c
   709   00116C  32E8               	rrcf	wreg,f,c
   710   00116E  32E8               	rrcf	wreg,f,c
   711   001170  0B07               	andlw	7
   712   001172  6E26               	movwf	??_gpio_pin_write_logic^0,c
   713   001174  0E01               	movlw	1
   714   001176  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
   715   001178  2A26               	incf	??_gpio_pin_write_logic^0,f,c
   716   00117A  EFC1  F008         	goto	u684
   717   00117E                     u685:
   718   00117E  90D8               	bcf	status,0,c
   719   001180  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   720   001182                     u684:
   721   001182  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
   722   001184  EFBF  F008         	goto	u685
   723   001188  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   724   00118A  0AFF               	xorlw	255
   725   00118C  6E28               	movwf	(??_gpio_pin_write_logic+2)^0,c
   726   00118E  5024               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   727   001190  6ED9               	movwf	fsr2l,c
   728   001192  6ADA               	clrf	fsr2h,c
   729   001194  50DF               	movf	223,w,c
   730   001196  0B07               	andlw	7
   731   001198  0D02               	mullw	2
   732   00119A  50F3               	movf	243,w,c
   733   00119C  0F0B               	addlw	low _lat_register
   734   00119E  6ED9               	movwf	fsr2l,c
   735   0011A0  6ADA               	clrf	fsr2h,c
   736   0011A2  CFDE F029          	movff	postinc2,??_gpio_pin_write_logic+3
   737   0011A6  CFDD F02A          	movff	postdec2,??_gpio_pin_write_logic+4
   738   0011AA  C029  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   739   0011AE  C02A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   740   0011B2  5028               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   741   0011B4  16DF               	andwf	indf2,f,c
   742                           
   743                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:                 break;
   744   0011B6  EF1A  F009         	goto	l1390
   745   0011BA                     l1384:
   746                           
   747                           ;MCAL_Layer/GPIO/hal_gpio.c: 74:                 ((*((volatile uint8 *)(lat_register[_pi
      +                          n_config->port]))) |= ((uint8)1 << _pin_config->pin));
   748   0011BA  5024               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   749   0011BC  6ED9               	movwf	fsr2l,c
   750   0011BE  6ADA               	clrf	fsr2h,c
   751   0011C0  30DF               	rrcf	223,w,c
   752   0011C2  32E8               	rrcf	wreg,f,c
   753   0011C4  32E8               	rrcf	wreg,f,c
   754   0011C6  0B07               	andlw	7
   755   0011C8  6E26               	movwf	??_gpio_pin_write_logic^0,c
   756   0011CA  0E01               	movlw	1
   757   0011CC  6E27               	movwf	(??_gpio_pin_write_logic+1)^0,c
   758   0011CE  2A26               	incf	??_gpio_pin_write_logic^0,f,c
   759   0011D0  EFEC  F008         	goto	u694
   760   0011D4                     u695:
   761   0011D4  90D8               	bcf	status,0,c
   762   0011D6  3627               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   763   0011D8                     u694:
   764   0011D8  2E26               	decfsz	??_gpio_pin_write_logic^0,f,c
   765   0011DA  EFEA  F008         	goto	u695
   766   0011DE  5024               	movf	gpio_pin_write_logic@_pin_config^0,w,c
   767   0011E0  6ED9               	movwf	fsr2l,c
   768   0011E2  6ADA               	clrf	fsr2h,c
   769   0011E4  50DF               	movf	223,w,c
   770   0011E6  0B07               	andlw	7
   771   0011E8  0D02               	mullw	2
   772   0011EA  50F3               	movf	243,w,c
   773   0011EC  0F0B               	addlw	low _lat_register
   774   0011EE  6ED9               	movwf	fsr2l,c
   775   0011F0  6ADA               	clrf	fsr2h,c
   776   0011F2  CFDE F028          	movff	postinc2,??_gpio_pin_write_logic+2
   777   0011F6  CFDD F029          	movff	postdec2,??_gpio_pin_write_logic+3
   778   0011FA  C028  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
   779   0011FE  C029  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
   780   001202  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   781   001204  12DF               	iorwf	indf2,f,c
   782                           
   783                           ;MCAL_Layer/GPIO/hal_gpio.c: 75:                 break;
   784   001206  EF1A  F009         	goto	l1390
   785   00120A                     l1388:
   786   00120A  5025               	movf	gpio_pin_write_logic@logic^0,w,c
   787   00120C  6E26               	movwf	??_gpio_pin_write_logic^0,c
   788   00120E  6A27               	clrf	(??_gpio_pin_write_logic+1)^0,c
   789                           
   790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   791                           ; Switch size 1, requested type "simple"
   792                           ; Number of cases is 1, Range of values is 0 to 0
   793                           ; switch strategies available:
   794                           ; Name         Instructions Cycles
   795                           ; simple_byte            4     3 (average)
   796                           ;	Chosen strategy is simple_byte
   797   001210  5027               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   798   001212  0A00               	xorlw	0	; case 0
   799   001214  B4D8               	btfsc	status,2,c
   800   001216  EF0F  F009         	goto	l1598
   801   00121A  EFAE  F008         	goto	l1380
   802   00121E                     l1598:
   803                           
   804                           ; Switch size 1, requested type "simple"
   805                           ; Number of cases is 2, Range of values is 0 to 1
   806                           ; switch strategies available:
   807                           ; Name         Instructions Cycles
   808                           ; simple_byte            7     4 (average)
   809                           ;	Chosen strategy is simple_byte
   810   00121E  5026               	movf	??_gpio_pin_write_logic^0,w,c
   811   001220  0A00               	xorlw	0	; case 0
   812   001222  B4D8               	btfsc	status,2,c
   813   001224  EFB2  F008         	goto	l1382
   814   001228  0A01               	xorlw	1	; case 1
   815   00122A  B4D8               	btfsc	status,2,c
   816   00122C  EFDD  F008         	goto	l1384
   817   001230  EFAE  F008         	goto	l1380
   818   001234                     l1390:
   819                           
   820                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:     return ret ;
   821   001234  502B               	movf	gpio_pin_write_logic@ret^0,w,c
   822   001236  0012               	return		;funcret
   823   001238                     __end_of_gpio_pin_write_logic:
   824                           	callstack 0
   825                           
   826 ;; *************** function _dc_motor_intialize *****************
   827 ;; Defined at:
   828 ;;		line 5 in file "ECU_Layer/DC_MOTOR/ecu_dc_motor.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  _dc_motor       1    7[COMRAM] PTR const struct .
   831 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  ret             1    8[COMRAM] unsigned char 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      unsigned char 
   836 ;; Registers used:
   837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   843 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;Total ram usage:        2 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; Hardware stack levels required when called: 1
   850 ;; This function calls:
   851 ;;		_gpio_pin_direction_intialize
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text5
   858   00139E                     __ptext5:
   859                           	callstack 0
   860   00139E                     _dc_motor_intialize:
   861                           	callstack 29
   862   00139E                     
   863                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 8:     if(((void*)0) == _dc_motor)
   864   00139E  502B               	movf	dc_motor_intialize@_dc_motor^0,w,c
   865   0013A0  A4D8               	btfss	status,2,c
   866   0013A2  EFD5  F009         	goto	u701
   867   0013A6  EFD7  F009         	goto	u700
   868   0013AA                     u701:
   869   0013AA  EFDB  F009         	goto	l1402
   870   0013AE                     u700:
   871   0013AE                     
   872                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 9:         ret = (std_ReturneType)0x00 ;
   873   0013AE  0E00               	movlw	0
   874   0013B0  6E2C               	movwf	dc_motor_intialize@ret^0,c
   875   0013B2  EFE7  F009         	goto	l1406
   876   0013B6                     l1402:
   877                           
   878                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 11:     {;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 12:    
      +                               ret = gpio_pin_direction_intialize(&(_dc_motor->dc_motor[0]));
   879   0013B6  C02B  F024         	movff	dc_motor_intialize@_dc_motor,gpio_pin_direction_intialize@_pin_config
   880   0013BA  EC01  F008         	call	_gpio_pin_direction_intialize	;wreg free
   881   0013BE  6E2C               	movwf	dc_motor_intialize@ret^0,c
   882                           
   883                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 13:         ret = gpio_pin_direction_intialize(&(_dc
      +                          _motor->dc_motor[1]));
   884   0013C0  282B               	incf	dc_motor_intialize@_dc_motor^0,w,c
   885   0013C2  6E24               	movwf	gpio_pin_direction_intialize@_pin_config^0,c
   886   0013C4  EC01  F008         	call	_gpio_pin_direction_intialize	;wreg free
   887   0013C8  6E2C               	movwf	dc_motor_intialize@ret^0,c
   888   0013CA                     
   889                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 14:         ret = (std_ReturneType)0x01 ;
   890   0013CA  0E01               	movlw	1
   891   0013CC  6E2C               	movwf	dc_motor_intialize@ret^0,c
   892   0013CE                     l1406:
   893                           
   894                           ;ECU_Layer/DC_MOTOR/ecu_dc_motor.c: 16:     return ret ;
   895   0013CE  502C               	movf	dc_motor_intialize@ret^0,w,c
   896   0013D0  0012               	return		;funcret
   897   0013D2                     __end_of_dc_motor_intialize:
   898                           	callstack 0
   899                           
   900 ;; *************** function _gpio_pin_direction_intialize *****************
   901 ;; Defined at:
   902 ;;		line 13 in file "MCAL_Layer/GPIO/hal_gpio.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   905 ;;		 -> dc_motor_2$dc_motor(2), dc_motor_2(2), dc_motor_1$dc_motor(2), dc_motor_1(2), 
   906 ;;		 -> relay_intialize@pin_obj(1), led_initialize@pin_obj(1), 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  ret             1    6[COMRAM] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      unsigned char 
   911 ;; Registers used:
   912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   918 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;Total ram usage:        7 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_dc_motor_intialize
   928 ;;		_button_intialize
   929 ;;		_led_initialize
   930 ;;		_relay_intialize
   931 ;;		_gpio_pin_intialize
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text6
   936   001002                     __ptext6:
   937                           	callstack 0
   938   001002                     _gpio_pin_direction_intialize:
   939                           	callstack 29
   940   001002                     
   941                           ;MCAL_Layer/GPIO/hal_gpio.c: 13: std_ReturneType gpio_pin_direction_intialize(const pin_
      +                          config_t *_pin_config);MCAL_Layer/GPIO/hal_gpio.c: 14: {;MCAL_Layer/GPIO/hal_gpio.c: 15:
      +                               std_ReturneType ret = (std_ReturneType)0x01 ;
   942   001002  0E01               	movlw	1
   943   001004  6E2A               	movwf	gpio_pin_direction_intialize@ret^0,c
   944                           
   945                           ;MCAL_Layer/GPIO/hal_gpio.c: 16:     if((_pin_config == ((void*)0)) || (_pin_config->pin
      +                           > 8 -1))
   946   001006  5024               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
   947   001008  B4D8               	btfsc	status,2,c
   948   00100A  EF09  F008         	goto	u601
   949   00100E  EF0B  F008         	goto	u600
   950   001012                     u601:
   951   001012  EF1B  F008         	goto	l1358
   952   001016                     u600:
   953   001016  5024               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
   954   001018  6ED9               	movwf	fsr2l,c
   955   00101A  6ADA               	clrf	fsr2h,c
   956   00101C  30DF               	rrcf	223,w,c
   957   00101E  32E8               	rrcf	wreg,f,c
   958   001020  32E8               	rrcf	wreg,f,c
   959   001022  0B07               	andlw	7
   960   001024  6E25               	movwf	??_gpio_pin_direction_intialize^0,c
   961   001026  0E07               	movlw	7
   962   001028  6425               	cpfsgt	??_gpio_pin_direction_intialize^0,c
   963   00102A  EF19  F008         	goto	u611
   964   00102E  EF1B  F008         	goto	u610
   965   001032                     u611:
   966   001032  EF72  F008         	goto	l1366
   967   001036                     u610:
   968   001036                     l1358:
   969                           
   970                           ;MCAL_Layer/GPIO/hal_gpio.c: 17:         ret = (std_ReturneType)0x00 ;
   971   001036  0E00               	movlw	0
   972   001038  6E2A               	movwf	gpio_pin_direction_intialize@ret^0,c
   973   00103A  EF92  F008         	goto	l1368
   974   00103E                     l1360:
   975                           
   976                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:                 ((*((volatile uint8 *)(tris_register[_p
      +                          in_config->port]))) &= ~((uint8)1 << _pin_config->pin));
   977   00103E  5024               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
   978   001040  6ED9               	movwf	fsr2l,c
   979   001042  6ADA               	clrf	fsr2h,c
   980   001044  30DF               	rrcf	223,w,c
   981   001046  32E8               	rrcf	wreg,f,c
   982   001048  32E8               	rrcf	wreg,f,c
   983   00104A  0B07               	andlw	7
   984   00104C  6E25               	movwf	??_gpio_pin_direction_intialize^0,c
   985   00104E  0E01               	movlw	1
   986   001050  6E26               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
   987   001052  2A25               	incf	??_gpio_pin_direction_intialize^0,f,c
   988   001054  EF2E  F008         	goto	u624
   989   001058                     u625:
   990   001058  90D8               	bcf	status,0,c
   991   00105A  3626               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
   992   00105C                     u624:
   993   00105C  2E25               	decfsz	??_gpio_pin_direction_intialize^0,f,c
   994   00105E  EF2C  F008         	goto	u625
   995   001062  5026               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
   996   001064  0AFF               	xorlw	255
   997   001066  6E27               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
   998   001068  5024               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
   999   00106A  6ED9               	movwf	fsr2l,c
  1000   00106C  6ADA               	clrf	fsr2h,c
  1001   00106E  50DF               	movf	223,w,c
  1002   001070  0B07               	andlw	7
  1003   001072  0D02               	mullw	2
  1004   001074  50F3               	movf	243,w,c
  1005   001076  0F15               	addlw	low _tris_register
  1006   001078  6ED9               	movwf	fsr2l,c
  1007   00107A  6ADA               	clrf	fsr2h,c
  1008   00107C  CFDE F028          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1009   001080  CFDD F029          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1010   001084  C028  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1011   001088  C029  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1012   00108C  5027               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1013   00108E  16DF               	andwf	indf2,f,c
  1014                           
  1015                           ;MCAL_Layer/GPIO/hal_gpio.c: 24:                 break;
  1016   001090  EF92  F008         	goto	l1368
  1017   001094                     l1362:
  1018                           
  1019                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:                 ((*((volatile uint8 *)(tris_register[_p
      +                          in_config->port]))) |= ((uint8)1 << _pin_config->pin));
  1020   001094  5024               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1021   001096  6ED9               	movwf	fsr2l,c
  1022   001098  6ADA               	clrf	fsr2h,c
  1023   00109A  30DF               	rrcf	223,w,c
  1024   00109C  32E8               	rrcf	wreg,f,c
  1025   00109E  32E8               	rrcf	wreg,f,c
  1026   0010A0  0B07               	andlw	7
  1027   0010A2  6E25               	movwf	??_gpio_pin_direction_intialize^0,c
  1028   0010A4  0E01               	movlw	1
  1029   0010A6  6E26               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1030   0010A8  2A25               	incf	??_gpio_pin_direction_intialize^0,f,c
  1031   0010AA  EF59  F008         	goto	u634
  1032   0010AE                     u635:
  1033   0010AE  90D8               	bcf	status,0,c
  1034   0010B0  3626               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1035   0010B2                     u634:
  1036   0010B2  2E25               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1037   0010B4  EF57  F008         	goto	u635
  1038   0010B8  5024               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1039   0010BA  6ED9               	movwf	fsr2l,c
  1040   0010BC  6ADA               	clrf	fsr2h,c
  1041   0010BE  50DF               	movf	223,w,c
  1042   0010C0  0B07               	andlw	7
  1043   0010C2  0D02               	mullw	2
  1044   0010C4  50F3               	movf	243,w,c
  1045   0010C6  0F15               	addlw	low _tris_register
  1046   0010C8  6ED9               	movwf	fsr2l,c
  1047   0010CA  6ADA               	clrf	fsr2h,c
  1048   0010CC  CFDE F027          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1049   0010D0  CFDD F028          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1050   0010D4  C027  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1051   0010D8  C028  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1052   0010DC  5026               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1053   0010DE  12DF               	iorwf	indf2,f,c
  1054                           
  1055                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:                 break;
  1056   0010E0  EF92  F008         	goto	l1368
  1057   0010E4                     l1366:
  1058   0010E4  5024               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
  1059   0010E6  6ED9               	movwf	fsr2l,c
  1060   0010E8  6ADA               	clrf	fsr2h,c
  1061   0010EA  BCDF               	btfsc	indf2,6,c
  1062   0010EC  EF7A  F008         	goto	u641
  1063   0010F0  EF7D  F008         	goto	u640
  1064   0010F4                     u641:
  1065   0010F4  0E01               	movlw	1
  1066   0010F6  EF7E  F008         	goto	u650
  1067   0010FA                     u640:
  1068   0010FA  0E00               	movlw	0
  1069   0010FC                     u650:
  1070   0010FC  6E25               	movwf	??_gpio_pin_direction_intialize^0,c
  1071   0010FE  6A26               	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  1072                           
  1073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1074                           ; Switch size 1, requested type "simple"
  1075                           ; Number of cases is 1, Range of values is 0 to 0
  1076                           ; switch strategies available:
  1077                           ; Name         Instructions Cycles
  1078                           ; simple_byte            4     3 (average)
  1079                           ;	Chosen strategy is simple_byte
  1080   001100  5026               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1081   001102  0A00               	xorlw	0	; case 0
  1082   001104  B4D8               	btfsc	status,2,c
  1083   001106  EF87  F008         	goto	l1600
  1084   00110A  EF1B  F008         	goto	l1358
  1085   00110E                     l1600:
  1086                           
  1087                           ; Switch size 1, requested type "simple"
  1088                           ; Number of cases is 2, Range of values is 0 to 1
  1089                           ; switch strategies available:
  1090                           ; Name         Instructions Cycles
  1091                           ; simple_byte            7     4 (average)
  1092                           ;	Chosen strategy is simple_byte
  1093   00110E  5025               	movf	??_gpio_pin_direction_intialize^0,w,c
  1094   001110  0A00               	xorlw	0	; case 0
  1095   001112  B4D8               	btfsc	status,2,c
  1096   001114  EF1F  F008         	goto	l1360
  1097   001118  0A01               	xorlw	1	; case 1
  1098   00111A  B4D8               	btfsc	status,2,c
  1099   00111C  EF4A  F008         	goto	l1362
  1100   001120  EF1B  F008         	goto	l1358
  1101   001124                     l1368:
  1102                           
  1103                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:     return ret ;
  1104   001124  502A               	movf	gpio_pin_direction_intialize@ret^0,w,c
  1105   001126  0012               	return		;funcret
  1106   001128                     __end_of_gpio_pin_direction_intialize:
  1107                           	callstack 0
  1108                           
  1109                           	psect	smallconst
  1110   001000                     __psmallconst:
  1111                           	callstack 0
  1112   001000  00                 	db	0
  1113   001001  00                 	db	0	; dummy byte at the end
  1114   000000                     
  1115                           	psect	rparam
  1116   000000                     
  1117                           	psect	config
  1118                           
  1119                           ; Padding undefined space
  1120   300000                     	org	3145728
  1121   300000  FF                 	db	255
  1122                           
  1123                           ;Config register CONFIG1H @ 0x300001
  1124                           ;	Oscillator Selection bits
  1125                           ;	FOSC = HS, HS oscillator
  1126                           ;	Fail-Safe Clock Monitor Enable bit
  1127                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1128                           ;	Internal/External Oscillator Switchover bit
  1129                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1130   300001                     	org	3145729
  1131   300001  02                 	db	2
  1132                           
  1133                           ;Config register CONFIG2L @ 0x300002
  1134                           ;	Power-up Timer Enable bit
  1135                           ;	PWRTEN = OFF, PWRT disabled
  1136                           ;	Brown-out Reset Enable bits
  1137                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1138                           ;	Brown Out Reset Voltage bits
  1139                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1140   300002                     	org	3145730
  1141   300002  19                 	db	25
  1142                           
  1143                           ;Config register CONFIG2H @ 0x300003
  1144                           ;	Watchdog Timer Enable bit
  1145                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1146                           ;	Watchdog Timer Postscale Select bits
  1147                           ;	WDTPS = 32768, 1:32768
  1148   300003                     	org	3145731
  1149   300003  1E                 	db	30
  1150                           
  1151                           ; Padding undefined space
  1152   300004                     	org	3145732
  1153   300004  FF                 	db	255
  1154                           
  1155                           ;Config register CONFIG3H @ 0x300005
  1156                           ;	CCP2 MUX bit
  1157                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1158                           ;	PORTB A/D Enable bit
  1159                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1160                           ;	Low-Power Timer1 Oscillator Enable bit
  1161                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1162                           ;	HFINTOSC Fast Start-up
  1163                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1164                           ;	MCLR Pin Enable bit
  1165                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1166   300005                     	org	3145733
  1167   300005  89                 	db	137
  1168                           
  1169                           ;Config register CONFIG4L @ 0x300006
  1170                           ;	Stack Full/Underflow Reset Enable bit
  1171                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1172                           ;	Single-Supply ICSP Enable bit
  1173                           ;	LVP = OFF, Single-Supply ICSP disabled
  1174                           ;	Extended Instruction Set Enable bit
  1175                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1176                           ;	Background Debugger Enable bit
  1177                           ;	DEBUG = 0x1, unprogrammed default
  1178   300006                     	org	3145734
  1179   300006  81                 	db	129
  1180                           
  1181                           ; Padding undefined space
  1182   300007                     	org	3145735
  1183   300007  FF                 	db	255
  1184                           
  1185                           ;Config register CONFIG5L @ 0x300008
  1186                           ;	Code Protection Block 0
  1187                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1188                           ;	Code Protection Block 1
  1189                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1190                           ;	Code Protection Block 2
  1191                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1192                           ;	Code Protection Block 3
  1193                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1194   300008                     	org	3145736
  1195   300008  0F                 	db	15
  1196                           
  1197                           ;Config register CONFIG5H @ 0x300009
  1198                           ;	Boot Block Code Protection bit
  1199                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1200                           ;	Data EEPROM Code Protection bit
  1201                           ;	CPD = OFF, Data EEPROM not code-protected
  1202   300009                     	org	3145737
  1203   300009  C0                 	db	192
  1204                           
  1205                           ;Config register CONFIG6L @ 0x30000A
  1206                           ;	Write Protection Block 0
  1207                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1208                           ;	Write Protection Block 1
  1209                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1210                           ;	Write Protection Block 2
  1211                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1212                           ;	Write Protection Block 3
  1213                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1214   30000A                     	org	3145738
  1215   30000A  0F                 	db	15
  1216                           
  1217                           ;Config register CONFIG6H @ 0x30000B
  1218                           ;	Configuration Register Write Protection bit
  1219                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1220                           ;	Boot Block Write Protection bit
  1221                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1222                           ;	Data EEPROM Write Protection bit
  1223                           ;	WRTD = OFF, Data EEPROM not write-protected
  1224   30000B                     	org	3145739
  1225   30000B  E0                 	db	224
  1226                           
  1227                           ;Config register CONFIG7L @ 0x30000C
  1228                           ;	Table Read Protection Block 0
  1229                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1230                           ;	Table Read Protection Block 1
  1231                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1232                           ;	Table Read Protection Block 2
  1233                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1234                           ;	Table Read Protection Block 3
  1235                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1236   30000C                     	org	3145740
  1237   30000C  0F                 	db	15
  1238                           
  1239                           ;Config register CONFIG7H @ 0x30000D
  1240                           ;	Boot Block Table Read Protection bit
  1241                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1242   30000D                     	org	3145741
  1243   30000D  40                 	db	64
  1244                           tosu	equ	0xFFF
  1245                           tosh	equ	0xFFE
  1246                           tosl	equ	0xFFD
  1247                           stkptr	equ	0xFFC
  1248                           pclatu	equ	0xFFB
  1249                           pclath	equ	0xFFA
  1250                           pcl	equ	0xFF9
  1251                           tblptru	equ	0xFF8
  1252                           tblptrh	equ	0xFF7
  1253                           tblptrl	equ	0xFF6
  1254                           tablat	equ	0xFF5
  1255                           prodh	equ	0xFF4
  1256                           prodl	equ	0xFF3
  1257                           indf0	equ	0xFEF
  1258                           postinc0	equ	0xFEE
  1259                           postdec0	equ	0xFED
  1260                           preinc0	equ	0xFEC
  1261                           plusw0	equ	0xFEB
  1262                           fsr0h	equ	0xFEA
  1263                           fsr0l	equ	0xFE9
  1264                           wreg	equ	0xFE8
  1265                           indf1	equ	0xFE7
  1266                           postinc1	equ	0xFE6
  1267                           postdec1	equ	0xFE5
  1268                           preinc1	equ	0xFE4
  1269                           plusw1	equ	0xFE3
  1270                           fsr1h	equ	0xFE2
  1271                           fsr1l	equ	0xFE1
  1272                           bsr	equ	0xFE0
  1273                           indf2	equ	0xFDF
  1274                           postinc2	equ	0xFDE
  1275                           postdec2	equ	0xFDD
  1276                           preinc2	equ	0xFDC
  1277                           plusw2	equ	0xFDB
  1278                           fsr2h	equ	0xFDA
  1279                           fsr2l	equ	0xFD9
  1280                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        35
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    dc_motor_intialize@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_move_left@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), 

    dc_motor_move_right@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor(COMRAM[2]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_intialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor(COMRAM[2]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlll[1]), PORTB(BITBIGSFRllh[1]), PORTC(BITBIGSFRllh[1]), PORTD(BITBIGSFRllh[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_dc_motor_move_left
    _main->_dc_motor_move_right
    _main->_dc_motor_stop
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _dc_motor_intialize->_gpio_pin_direction_intialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6940
                                             10 COMRAM     2     2      0
                 _dc_motor_intialize
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        2     1      1    2020
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  2     1      1    2020
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   2     1      1    2020
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    1851
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _dc_motor_intialize                                   2     1      1     880
                                              7 COMRAM     2     1      1
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_direction_intialize                         7     6      1     635
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dc_motor_intialize
     _gpio_pin_direction_intialize
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      C      37       1       57.9%
BITBIGSFRlll        20      0       0      39        0.0%
BITBIGSFRllh         5      0       0      38        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      40        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Oct 08 20:29:48 2023

                                     l34 13D0                                       l44 1366  
                                     l54 12EE                                       l39 132A  
                                    l168 1126                                      l187 1236  
                                    l259 124C                                      u600 1016  
                                    u601 1012                                      u610 1036  
                                    u611 1032                                      u700 13AE  
                                    u701 13AA                                      u710 1300  
                                    u711 12FC                                      u640 10FA  
                                    u624 105C                                      u720 133C  
                                    u641 10F4                                      u625 1058  
                                    u721 1338                                      u650 10FC  
                                    u634 10B2                                      u730 12C4  
                                    u635 10AE                                      u731 12C0  
                                    u660 113C                                      u661 1138  
                                    u670 115C                                      u671 1158  
                                    u907 1260                                      u684 1182  
                                    u685 117E                                      u917 1280  
                                    u694 11D8                                      u695 11D4  
                                    u927 12A0                                      _ret 001F  
                    led_initialize@F3140 0037                                      wreg 0FE8  
                                   l1400 13AE                                     l1402 13B6  
                                   l1410 12F0                                     l1404 13CA  
                                   l1412 1300                                     l1406 13CE  
                                   l1430 1364                                     l1422 132C  
                                   l1414 1308                                     l1600 110E  
                                   l1360 103E                                     l1424 133C  
                                   l1416 1324                                     l1440 12E8  
                                   l1362 1094                                     l1354 1002  
                                   l1426 1344                                     l1418 1328  
                                   l1442 12EC                                     l1434 12B4  
                                   l1356 1016                                     l1380 115C  
                                   l1428 1360                                     l1436 12C4  
                                   l1366 10E4                                     l1358 1036  
                                   l1382 1164                                     l1390 1234  
                                   l1438 12CC                                     l1368 1124  
                                   l1384 11BA                                     l1376 1128  
                                   l1378 113C                                     l1388 120A  
                                   l1580 1238                                     l1398 139E  
                                   l1582 1256                                     l1584 126C  
                                   l1586 128C                                     l1588 1296  
                                   l1598 121E                                     _LATA 0F89  
                                   _LATB 0F8A                                     _LATC 0F8B  
                                   _LATD 0F8C                                     _LATE 0F8D  
                                   _main 1238                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodl 0FF3  
                                   start 0000                             ___param_bank 0000  
                   _gpio_pin_write_logic 1128                                    ?_main 0024  
                    relay_turn_off@F3150 0031                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _TRISA 0F92  
                                  _TRISB 0F93                                    _TRISC 0F94  
                                  _TRISD 0F95                                    _TRISE 0F96  
                                  tablat 0FF5                    dc_motor_intialize@ret 002C  
                                  status 0FD8                          __initialization 1368  
                           __end_of_main 12B4                    ?_gpio_pin_write_logic 0024  
                                 ??_main 002E                            __activetblptr 0002  
                       led_turn_on@F3145 0036                            _tris_register 0015  
            __end_of_dc_motor_move_right 132C                                   clear_0 138E  
                                 isa$std 0001  gpio_pin_direction_intialize@_pin_config 0024  
                           __pdataCOMRAM 0001                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                               __accesstop 0060  
                __end_of__initialization 1394                            ___rparam_used 0001  
            dc_motor_move_left@_dc_motor 002C                   ??_gpio_pin_write_logic 0026  
                         __pcstackCOMRAM 0024                               _dc_motor_1 0022  
                             _dc_motor_2 0020                     relay_intialize@F3140 0033  
                      led_turn_off@F3150 0035                     led_turn_toggle@F3155 0034  
                 relay_turn_toggle@F3155 0030                                  __Hparam 0000  
                                __Lparam 0000                    dc_motor_move_left@ret 002D  
                           __psmallconst 1000                                  __pcinit 1368  
                                __ramtop 1000                                  __ptext0 1238  
                                __ptext1 12B4                                  __ptext2 12F0  
                                __ptext3 132C                                  __ptext4 1128  
                                __ptext5 139E                                  __ptext6 1002  
                   end_of_initialization 1394                            __Lmediumconst 0000  
                          _dc_motor_stop 12B4                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE     __end_of_gpio_pin_direction_intialize 1128  
           _gpio_pin_direction_intialize 1002                           ?_dc_motor_stop 002C  
                     relay_turn_on@F3145 0032                            __pidataCOMRAM 13D2  
                    start_initialization 1368            ?_gpio_pin_direction_intialize 0024  
                           _lat_register 000B               __end_of_dc_motor_intialize 13D2  
                 dc_motor_stop@_dc_motor 002C               __end_of_dc_motor_move_left 1368  
                       dc_motor_stop@ret 002D                              __pbssCOMRAM 0030  
        gpio_pin_direction_intialize@ret 002A                          ??_dc_motor_stop 002D  
        gpio_pin_write_logic@_pin_config 0024                gpio_pin_write_logic@logic 0025  
                            __smallconst 1000           ??_gpio_pin_direction_intialize 0025  
                gpio_pin_write_logic@ret 002B                                copy_data0 137C  
                    _dc_motor_move_right 12F0                                 __Hrparam 0000  
                               __Lrparam 0000                     ?_dc_motor_move_right 002C  
                 dc_motor_move_right@ret 002D                                 isa$xinst 0000  
                     _dc_motor_intialize 139E                    ??_dc_motor_move_right 002D  
                    ?_dc_motor_intialize 002B                       _dc_motor_move_left 132C  
           __end_of_gpio_pin_write_logic 1238                      ?_dc_motor_move_left 002C  
                   ??_dc_motor_intialize 002C                     ??_dc_motor_move_left 002D  
           dc_motor_move_right@_dc_motor 002C                            _port_register 0001  
                  __end_of_dc_motor_stop 12F0              dc_motor_intialize@_dc_motor 002B  
